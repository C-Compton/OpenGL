.TH "Scene" 3 "Sun Dec 9 2012" "Version 9001" "OpenGL Flythrough" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Scene \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBSetShader\fP (GLuint gShader)"
.br
.ti -1c
.RI "\fBObject\fP * \fBAddObject\fP (std::string objName)"
.br
.ti -1c
.RI "void \fBDelObject\fP (std::string objName)"
.br
.ti -1c
.RI "void \fBDelObject\fP (void)"
.br
.ti -1c
.RI "void \fBPopObject\fP (void)"
.br
.ti -1c
.RI "\fBObject\fP * \fBNext\fP (void)"
.br
.ti -1c
.RI "\fBObject\fP * \fBPrev\fP (void)"
.br
.ti -1c
.RI "\fBObject\fP * \fBActive\fP (void)"
.br
.ti -1c
.RI "void \fBDraw\fP (void)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBScene\fP (\fBScene\fP &copy)"
.br
.ti -1c
.RI "\fBScene\fP & \fBoperator=\fP (const \fBScene\fP &copy)"
.br
.ti -1c
.RI "void \fBDeleteObject\fP (\fBObject\fP *obj)"
.br
.RI "\fIDeleteObject is the actual implementation function that will remove an \fBObject\fP from the \fBScene\fP list and \fBScene\fP map, then free the object\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::map< std::string, \fBObject\fP * > \fBmap\fP"
.br
.ti -1c
.RI "std::list< \fBObject\fP * > \fBlist\fP"
.br
.ti -1c
.RI "std::list< \fBObject\fP * >::iterator \fBcurrentObj\fP"
.br
.ti -1c
.RI "GLuint \fBgShader\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 8 of file Scene\&.hpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void Scene::DeleteObject (\fBObject\fP *obj)\fC [private]\fP"

.PP
DeleteObject is the actual implementation function that will remove an \fBObject\fP from the \fBScene\fP list and \fBScene\fP map, then free the object\&. \fBParameters:\fP
.RS 4
\fIobj\fP The pointer to the object to free\&. 
.RE
.PP

.PP
Definition at line 37 of file Scene\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OpenGL Flythrough from the source code\&.
